#summary ABAP implementation of RSA encryption

= Introduction =

It is beyond the scope of this WIKI to describe the theory behind public key encryption.  A very good summary can be found at http://en.wikipedia.org/wiki/RSA.  

SAPNINJA has provided ABAP implementations of two functions that provide the most basic building blocks you need.

You will need to use your own creativity to use the function provided here to encrypt text.  You will also need to generate your own public key, private key and modulus to be secure.  There are tools available on the web that will help you do this. 


= Details =

You will need to download and implement the following ABAP functions:
   * [http://code.google.com/p/sapninja/source/browse/trunk/tools/functionmodules/zmodexp.txt ZMODEXP]
   * [http://code.google.com/p/sapninja/source/browse/trunk/tools/functionmodules/zdec2bin.txt ZDEC2BIN]
   * Once you have implemented them, encryption and decryption can be done by using function ZMODEXP. 

= Hypothetical Example =
   * Say you have an application with an annual license.  Your license checking routine checks to see if license year has expired.  For our example, we are going to issue a license for the year 2011.
   * Using the example keys from the Wikipedia example we decide to use the following keys:
<verbatim>
private key =
public key
modulus
</verbatim>